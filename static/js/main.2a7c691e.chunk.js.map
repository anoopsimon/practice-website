{"version":3,"sources":["services/AuthService.js","components/NavMenu.js","components/Layout.js","services/MoviesService.js","components/Home.js","components/Orders.js","components/Movies.js","components/Spinner.js","components/Login.js","App.js","registerServiceWorker.js","index.js"],"names":["API_URL","localStorage","setItem","JSON","stringify","setTimeout","console","log","username","password","axios","post","then","response","data","accessToken","removeItem","email","parse","getItem","NavMenu","props","toggleNavbar","bind","logOut","state","collapsed","title","this","setState","AuthService","logout","window","location","reload","Navbar","className","light","Container","NavbarBrand","tag","Link","to","alt","src","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","displayName","name","Layout","children","fetch","json","Home","movies","MoviesService","getSuggestions","CardDeck","map","movie","Card","style","width","height","marginTop","CardImg","top","image","CardBody","CardTitle","CardSubtitle","genre","CardText","description","Button","Orders","forecasts","loading","color","populateWeatherData","contents","size","renderForecastsTable","borderRadius","Table","aria-labelledby","forecast","key","date","releaseDate","price","rating","numberOfStars","starRatedColor","starDimension","Movies","handleOnSearch","selectedResult","result","currentCount","incrementCounter","render","getMovieList","list","keys","all","onSelect","newSelectedItem","Spinner","Login","handleLogin","message","e","preventDefault","loginAs","history","push","Row","Col","sm","md","offset","align","Form","onSubmit","FormGroup","Input","type","id","placeholder","aria-label","href","withRouter","App","currentUser","undefined","user","getCurrentUser","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","basename","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2a7c691e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nclass AuthService {\r\n\r\n  loginAs(){\r\n        localStorage.setItem(\"user\", JSON.stringify({\"token\":\"ey78788788787asd78asd78sa7d8s7d8a7sd88d7s8a7d8as7d87sd87ad87djkdhkjdhjsadhsa9d8y7s9d78sd789asdsajkdhsajkdh\"}));\r\n        setTimeout(() => { console.log('wait!!!!!')  }, 10000);   \r\n        return true;\r\n    }\r\n\r\n   \r\n\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthService from '../services/AuthService';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      collapsed: true,\r\n      title:'Movie Rental'\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n  logOut() {\r\n    AuthService.logout();\r\n    console.log('logout')\r\n    window.location.reload();\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">\r\n            <img alt=\"\" src=\"logo.png\"></img>\r\n            </NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/movies\">Movies</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/fetch-orders\">My Rentals</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/login\" onClick={this.logOut}>Logout</NavLink>\r\n                </NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\nconst API_URL = \"http://localhost:8081/\";\r\n\r\nclass MoviesService {\r\n \r\n  async getSuggestions()\r\n  {\r\n   const response =  await fetch(API_URL+'suggestions');\r\n   return await response.json();\r\n };\r\n\r\n}\r\n\r\n  \r\nexport default new MoviesService();\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle, Button,CardDeck\r\n} from 'reactstrap';\r\nimport MoviesService from \"../services/MoviesService\";\r\nexport class Home extends Component {\r\n  static displayName = Home.name;\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state =\r\n    {\r\n      movies : []\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({\r\n      movies: await MoviesService.getSuggestions()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"title\">\r\n          MOVIES TO BUY OR RENT ON <br></br>\r\n          BLU-RAY, DVD & DIGITAL\r\n        </h1>\r\n        <CardDeck>\r\n        {this.state.movies.map(movie => \r\n        \r\n        <Card style={{width:'350px',height:'450px',marginTop:'5%'}}>\r\n        <CardImg top src={movie.image} alt=\"Card image cap\" />\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">{movie.name}</CardTitle>\r\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{movie.genre}</CardSubtitle>\r\n          <CardText>{movie.description}</CardText>\r\n          <Button className=\"styledButton\">Buy Or Rent</Button>\r\n        </CardBody>\r\n      </Card>\r\n        \r\n        ) }\r\n\r\n       \r\n     \r\n    </CardDeck>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport SyncLoader from \"react-spinners/SyncLoader\";\r\nimport { Table } from 'reactstrap';\r\nimport StarRatings from 'react-star-ratings';\r\nimport {\r\n  Card, Button, CardImg, CardTitle, CardText, CardDeck,\r\n  CardSubtitle, CardBody\r\n} from 'reactstrap';\r\n\r\n\r\nexport class Orders extends Component {\r\n  static displayName = Orders.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true,color:'purple',title:'Movie Rental History' };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <Card style={{borderRadius:'10px'}}>\r\n      <Table  aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Movie</th>\r\n            <th>Genre</th>\r\n            <th>Release Date</th>\r\n            <th>Price</th>\r\n            <th>Rating</th>\r\n            <th>Order Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.movie}</td>\r\n              <td>{forecast.genre}</td>\r\n              <td>{forecast.releaseDate}</td>\r\n              <td>{forecast.price}</td>\r\n              <td>\r\n              <StarRatings\r\n              rating={forecast.rating}\r\n              numberOfStars={5}\r\n              name='rating'\r\n              starRatedColor='yellow'\r\n              starDimension=\"18px\"\r\n              />\r\n              </td>\r\n              <td>{forecast.date }</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ?       <SyncLoader color={this.state.color} loading={this.state.loading}  size={10} />\r\n\r\n      : Orders.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        {/* <h1 id=\"tabelLabel\" >{this.state.title}</h1> */}\r\n        <h1 className=\"title\">{this.state.title}</h1>    \r\n\r\n        <p>Below is the list of movies you have rented in the past</p>\r\n        {contents}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n    const response = await fetch('http://localhost:8081/rentalHistory');\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n","import { any } from 'prop-types';\r\nimport React, { Component } from 'react';\r\n import FuzzySearch from 'react-fuzzy'\r\n\r\n import {\r\n  Card, Button, CardImg, CardTitle, CardText, CardDeck,\r\n  CardSubtitle, CardBody\r\n} from 'reactstrap';\r\n\r\nexport class Movies extends Component {\r\n  static displayName = Movies.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      currentCount: 0 ,\r\n      title:'Search Movies',\r\n      movies:[],\r\n      result:null\r\n\r\n         \r\n   };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n    this.render = this.render.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMovieList();\r\n    //document.getElementById('fuzzyTextbox').removeAttribute(\"style\");\r\n\r\n  }\r\n\r\n  async getMovieList() {\r\n    const response = await fetch('http://localhost:8081/movies');\r\n    const data = await response.json();\r\n    this.setState({ movies: data, loading: false });\r\n  }\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n   handleOnSearch = (selectedResult) => {\r\n    console.log(selectedResult);\r\n    this.setState({\r\n      result:selectedResult\r\n    });\r\n  };\r\n\r\n   result() {\r\n    return (\r\n    <Card className=\"result sr\">\r\n    <CardImg top width=\"0%\" height =\"480px\" src=\"/img_titanic.jpg\" alt=\"Card image cap\" />\r\n    <CardBody>\r\n      <CardTitle tag=\"h5\">Titanic</CardTitle>\r\n      <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">126 wins & 83 nominations total\r\n</CardSubtitle>\r\n      <CardText>Titanic: Directed by James Cameron. With Leonardo DiCaprio, Kate Winslet, Billy Zane, Kathy Bates. A seventeen-year-old aristocrat falls in love with a kind </CardText>\r\n      <Button className=\"styledButton\">Buy</Button>\r\n    </CardBody>\r\n  </Card>\r\n    )\r\n  }\r\n \r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 className=\"title\">{this.state.title}</h1>    \r\n          <div className= \"fuzzy\">\r\n       <FuzzySearch\r\n      list={this.state.movies}\r\n      keys={['author', 'title']}\r\n      width={430}\r\n      style={{all: 'unset'}}\r\n      onSelect={(newSelectedItem) => {this.handleOnSearch(newSelectedItem)  }}\r\n      className=\"fuzzy\"\r\n\r\n    />\r\n    </div>\r\n\r\n    {this.state.result === null ? <p> </p>: this.result()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","/**\r\n * @author Anoop Simon\r\n * @create date 2021-07-05 11:33:57\r\n * @modify date 2021-07-05 11:33:57\r\n * @desc A re -usable loader component\r\n */\r\nimport React, { Component } from \"react\";\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\n\r\nexport default class Spinner extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        color:'#8C55AA',\r\n        size:200\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"loader\">\r\n          <FadeLoader\r\n            color={this.state.color}\r\n            loading={this.props.loading}\r\n            size={this.state.size}\r\n          ></FadeLoader>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { withRouter } from \"react-router\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nimport AuthService from \"../services/AuthService\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n} from \"reactstrap\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    // this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    // this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n    console.log(\"Invoke login\");\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true,\r\n    });\r\n    AuthService.loginAs();\r\n    this.props.history.push(\"/\");\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading)\r\n      return (\r\n        <Spinner loading={this.state.loading}/>\r\n             );\r\n\r\n    return (\r\n      <>\r\n        <Container>\r\n          <Row style={{ marginTop: \"20%\" }}>\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <Card className=\"loginForm\">\r\n              <img alt=\"logo\" src=\"logo.png\"></img>\r\n              <p className=\"sign\" align=\"center\">Sign in</p>\r\n                <Form onSubmit={this.handleLogin}>\r\n                 \r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"username\"\r\n                      placeholder=\"Username\"\r\n                      aria-label=\"username or email\"\r\n                      className=\"un\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"pwd\"\r\n                      placeholder=\"Password\"\r\n                      aria-label=\"password\"\r\n                      className=\"un\"\r\n                    />\r\n                  </FormGroup>\r\n                  <Button\r\n                    id=\"loginBtn\"\r\n                    aria-label=\"Login Button\"\r\n                    className=\"styledButton\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form>\r\n                <p className=\"forgot\" align=\"center\"><a aria-label=\"forgot password\" href=\"/\">Forgot Password?</a></p>\r\n\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Login);\r\n","import React, { Component } from 'react';\r\n//import { Route } from 'react-router';\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\nimport {  Orders } from './components/Orders';\r\nimport {  Movies } from './components/Movies';\r\nimport  Login  from './components/Login';\r\n\r\nimport './custom.css'\r\nimport AuthService from './services/AuthService';\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n       currentUser: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,        \r\n      });\r\n    }\r\n  }\r\n\r\n  render () {\r\n    if(this.state.currentUser===undefined) return (<><Login></Login></>) ;\r\n\r\n    return (\r\n\r\n      <Layout>\r\n         <Switch>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/movies' component={Movies} />\r\n        <Route path='/fetch-orders' component={Orders} />\r\n        <Route path='/login' component={Login} />\r\n        </Switch>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}