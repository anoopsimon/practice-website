{"version":3,"sources":["services/AuthService.js","components/NavMenu.js","components/Layout.js","services/MoviesService.js","components/Spinner.js","components/Home.js","components/Orders.js","components/Movies.js","components/Login.js","components/Player.js","App.js","registerServiceWorker.js","index.js"],"names":["API_URL","process","headers","username","password","axios","post","email","id","uuidv4","then","resp","console","log","data","catch","error","response","accessToken","localStorage","setItem","JSON","stringify","this","clearFromLocalStorage","getToken","isJwtExpired","keys","map","key","index","removeItem","parse","getItem","NavMenu","props","toggleNavbar","bind","logOut","state","collapsed","title","setState","AuthService","logout","window","location","reload","Navbar","className","light","Container","NavbarBrand","tag","Link","to","alt","src","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","displayName","name","Layout","children","fetch","json","Spinner","color","size","loading","Home","movies","MoviesService","getSuggestions","CardDeck","movie","Card","style","width","height","marginTop","CardImg","top","image","CardBody","CardTitle","CardSubtitle","genre","CardText","description","Button","Orders","forecasts","populateRentalHistory","rentalHistory","contents","renderForecastsTable","borderRadius","Table","aria-labelledby","forecast","date","releaseDate","price","rating","numberOfStars","starRatedColor","starDimension","Movies","handleOnSearch","selectedResult","result","currentCount","incrementCounter","render","getMovieList","list","all","onSelect","newSelectedItem","Login","handleLogin","message","e","preventDefault","login","history","push","Row","Col","sm","md","offset","align","Form","onSubmit","FormGroup","Input","type","placeholder","aria-label","href","withRouter","Player","UncontrolledAlert","fade","marginLeft","marginRight","margin","srcOrigin","App","currentUser","undefined","sessionExpired","user","getCurrentUser","isSessionExpired","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","basename","URL","origin","addEventListener","status","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c0642ab8.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { isJwtExpired } from 'jwt-check-expiration';\r\n\r\n\r\nconst API_URL = process.env.REACT_APP_MOVIES_SERVICE_URL;\r\n\r\nconst headers = {\r\n  \"Content-Type\": \"application/json\",\r\n};\r\nconst KEYS_USER=\"user\";\r\nconst KEYS_TOKEN=\"token\";\r\n\r\nclass AuthService {\r\n  \r\n  /**\r\n   * Creates a user\r\n   * @param {*} username \r\n   * @param {*} password \r\n   */\r\n  async createUser(username, password) {\r\n    await axios\r\n      .post(\r\n        API_URL + \"users\",\r\n        {\r\n          password: password,\r\n          email: username,\r\n          id: uuidv4(),\r\n        },\r\n        headers\r\n      )\r\n      .then((resp) => {\r\n        console.log(resp.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });  \r\n  }\r\n\r\n  /**\r\n   * Perform login returns auth token JWT\r\n   * @param {*} username \r\n   * @param {*} password \r\n   * @returns \r\n   */\r\n  async login(email, password) {\r\n    return await axios\r\n      .post(API_URL + \"login\", {\r\n        email,\r\n        password,\r\n      })\r\n      .then((response) => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(KEYS_USER, JSON.stringify(email));\r\n          localStorage.setItem(\r\n            KEYS_TOKEN,\r\n            JSON.stringify(response.data.accessToken)\r\n          );\r\n        }\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Logout from the application and clear local storage\r\n   */\r\n  async logout() {\r\n    await this.clearFromLocalStorage([KEYS_USER,KEYS_TOKEN]);\r\n  }\r\n\r\n  async isSessionExpired() {\r\n    if(this.getToken() === null) return true;\r\n    return await isJwtExpired(this.getToken());\r\n  }\r\n\r\n  /**\r\n   * util function to clear local storage\r\n   * @param {*} keys \r\n   */\r\n  async clearFromLocalStorage(keys)\r\n  {\r\n    await keys.map( (key,index) => (\r\n      localStorage.removeItem(key)\r\n     )); \r\n  }\r\n\r\n  /**\r\n   * Register a user account\r\n   * @param {Regr} username \r\n   * @param {*} email \r\n   * @param {*} password \r\n   * @returns \r\n   */\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @returns Get current logged in user from local storage\r\n   */\r\n  getCurrentUser() {        \r\n    return JSON.parse(localStorage.getItem(KEYS_USER));\r\n  }\r\n\r\n  /**\r\n   * get authentication token\r\n   * @returns \r\n   */\r\n  getToken() {\r\n    if (localStorage.getItem(KEYS_TOKEN)) \r\n    {\r\n     return JSON.parse(localStorage.getItem(KEYS_TOKEN));;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthService from '../services/AuthService';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      collapsed: true,\r\n      title:'Movie Rental'\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n  async logOut() {\r\n    await AuthService.logout();\r\n    window.location.reload();\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">\r\n            <img alt=\"\" src=\"logo.png\"></img>\r\n            </NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/movies\">Movies</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/fetch-orders\">My Rentals</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/player\">Watch</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/login\" onClick={this.logOut}>Logout</NavLink>\r\n                </NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const API_URL = process.env.REACT_APP_MOVIES_SERVICE_URL;\r\n\r\nclass MoviesService {\r\n  async getSuggestions() {\r\n    const response = await fetch(API_URL + \"suggestions\");\r\n    return await response.json();\r\n  }\r\n\r\n  async populateRentalHistory() {\r\n    const response = await fetch(API_URL + \"rentalHistory\");\r\n    return await response.json();\r\n  }\r\n\r\n  async getMovieList() {\r\n    const response = await fetch(API_URL + \"movies\");\r\n    return await response.json();\r\n  }\r\n}\r\n\r\nexport default new MoviesService();\r\n","/**\r\n * @author Anoop Simon\r\n * @create date 2021-07-05 11:33:57\r\n * @modify date 2021-07-05 11:33:57\r\n * @desc A re -usable loader component\r\n */\r\nimport React, { Component } from \"react\";\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\n\r\nexport default class Spinner extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        color:'#8C55AA',\r\n        size:600\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"loader\">\r\n                    <FadeLoader\r\n            color={this.state.color}\r\n            loading={this.props.loading}\r\n            size={this.state.size}\r\n          ></FadeLoader>\r\n        \r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle, Button,CardDeck\r\n} from 'reactstrap';\r\nimport MoviesService from \"../services/MoviesService\";\r\nimport Spinner from \"./Spinner\";\r\nexport class Home extends Component {\r\n  static displayName = Home.name;\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state =\r\n    {\r\n      movies : [],\r\n      loading:true\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({\r\n      movies: await MoviesService.getSuggestions(),\r\n      loading:false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(this.state.loading) return(<Spinner></Spinner>)\r\n    return (\r\n      <div>\r\n        <h1 className=\"title\">\r\n          MOVIES TO BUY OR RENT ON <br></br>\r\n          BLU-RAY, DVD & DIGITAL\r\n        </h1>\r\n        <CardDeck>\r\n        {this.state.movies.map((movie,key) => \r\n        \r\n        <Card key={key} style={{width:'350px',height:'400px',marginTop:'3%'}}>\r\n        <CardImg top src={movie.image} alt=\"Card image cap\" />\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">{movie.name}</CardTitle>\r\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{movie.genre}</CardSubtitle>\r\n          <CardText>{movie.description}</CardText>\r\n          <Button className=\"styledButton\">Buy Or Rent</Button>\r\n        </CardBody>\r\n      </Card>\r\n        \r\n        ) }\r\n\r\n       \r\n     \r\n    </CardDeck>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"reactstrap\";\r\nimport StarRatings from \"react-star-ratings\";\r\nimport {  Card } from \"reactstrap\";\r\nimport Spinner from \"./Spinner\";\r\nimport MoviesService from \"../services/MoviesService\";\r\n\r\nexport class Orders extends Component {\r\n  static displayName = Orders.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      forecasts: [],\r\n      loading: true,\r\n      color: \"purple\",\r\n      title: \"Movie Rental History\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const rentalHistory = await MoviesService.populateRentalHistory();\r\n    this.setState({ forecasts: rentalHistory, loading: false });\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <Card style={{ borderRadius: \"10px\" }}>\r\n        <Table aria-labelledby=\"tabelLabel\">\r\n          <thead>\r\n            <tr>\r\n              <th>Movie</th>\r\n              <th>Genre</th>\r\n              <th>Release Date</th>\r\n              <th>Price</th>\r\n              <th>Rating</th>\r\n              <th>Order Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {forecasts.map((forecast) => (\r\n              <tr key={forecast.date}>\r\n                <td>{forecast.movie}</td>\r\n                <td>{forecast.genre}</td>\r\n                <td>{forecast.releaseDate}</td>\r\n                <td>{forecast.price}</td>\r\n                <td>\r\n                  <StarRatings\r\n                    rating={forecast.rating}\r\n                    numberOfStars={5}\r\n                    name=\"rating\"\r\n                    starRatedColor=\"yellow\"\r\n                    starDimension=\"18px\"\r\n                  />\r\n                </td>\r\n                <td>{forecast.date}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading ? (\r\n      <Spinner />\r\n    ) : (\r\n      Orders.renderForecastsTable(this.state.forecasts)\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <h1 className=\"title\">{this.state.title}</h1>\r\n        <p>Below is the list of movies you have rented in the past</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport FuzzySearch from \"react-fuzzy\";\r\n\r\nimport {\r\n  Card,\r\n  Button,\r\n  CardImg,\r\n  CardTitle,\r\n  CardText,\r\n  CardSubtitle,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport MoviesService from \"../services/MoviesService\";\r\n\r\n\r\nexport class Movies extends Component {\r\n  static displayName = Movies.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentCount: 0,\r\n      title: \"Search Movies\",\r\n      movies: [],\r\n      result: null,\r\n    };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n    this.render = this.render.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await MoviesService.getMovieList();\r\n    this.setState({ movies: data, loading: false });\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1,\r\n    });\r\n  }\r\n\r\n  handleOnSearch = (selectedResult) => {\r\n    console.log(selectedResult);\r\n    this.setState({\r\n      result: selectedResult,\r\n    });\r\n  };\r\n\r\n  result() {\r\n    return (\r\n      <Card className=\"result sr\">\r\n        <CardImg\r\n          top\r\n          width=\"0%\"\r\n          height=\"400px\"\r\n          src=\"img_titanic.jpg\"\r\n          alt=\"Card image cap\"\r\n        />\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">Titanic</CardTitle>\r\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n            126 wins & 83 nominations total\r\n          </CardSubtitle>\r\n          <CardText>\r\n            Titanic: Directed by James Cameron. With Leonardo DiCaprio, Kate\r\n            Winslet, Billy Zane, Kathy Bates. A seventeen-year-old aristocrat\r\n            falls in love with a kind{\" \"}\r\n          </CardText>\r\n          <Button className=\"styledButton\">Buy</Button>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 className=\"title\">{this.state.title}</h1>\r\n        <div className=\"fuzzy\">\r\n          <FuzzySearch\r\n            list={this.state.movies}\r\n            keys={[\"author\", \"title\"]}\r\n            width={430}\r\n            style={{ all: \"unset\" }}\r\n            onSelect={(newSelectedItem) => {\r\n              this.handleOnSearch(newSelectedItem);\r\n            }}\r\n            className=\"fuzzy\"\r\n          />\r\n        </div>\r\n\r\n        {this.state.result === null ? <p> </p> : this.result()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup,  Input} from \"reactstrap\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { withRouter } from \"react-router\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nimport AuthService from \"../services/AuthService\";\r\nimport {Card} from \"reactstrap\";\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    // this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    // this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  async handleLogin(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true,\r\n    });\r\n    //await AuthService.createUser('admin@mvrental.com','admin');\r\n    await AuthService.login('admin@mvrental.com','admin');\r\n    this.props.history.push(\"/\");\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading)\r\n      return (\r\n        <Spinner loading={this.state.loading}/>\r\n             );\r\n\r\n    return (\r\n      <>\r\n        <Container>\r\n          <Row style={{ marginTop: \"20%\" }}>\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <Card className=\"loginForm\">\r\n              <img alt=\"logo\" src=\"logo.png\"></img>\r\n              <p className=\"sign\" align=\"center\">Sign in</p>\r\n                <Form onSubmit={this.handleLogin}>\r\n                 \r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"username\"\r\n                      placeholder=\"Username\"\r\n                      aria-label=\"username or email\"\r\n                      className=\"un\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"pwd\"\r\n                      placeholder=\"Password\"\r\n                      aria-label=\"password\"\r\n                      className=\"un\"\r\n                    />\r\n                  </FormGroup>\r\n                  <Button\r\n                    id=\"loginBtn\"\r\n                    aria-label=\"Login Button\"\r\n                    className=\"styledButton\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form>\r\n                <p className=\"forgot\" align=\"center\"><a aria-label=\"forgot password\" href=\"/\">Forgot Password?</a></p>\r\n\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Login);\r\n","import React, { Component } from \"react\";\r\nimport QierPlayer from 'qier-player';\r\nimport { UncontrolledAlert } from 'reactstrap';\r\n\r\nexport class Player extends Component {\r\n  static displayName = Player.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentCount: 0,\r\n      title: \"Watch Movies / TV Shows\",\r\n      result: null,\r\n    };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n    this.render = this.render.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n   // this.setState({ movies: data, loading: false });\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1,\r\n    });\r\n  }\r\n\r\n  handleOnSearch = (selectedResult) => {\r\n    console.log(selectedResult);\r\n    this.setState({\r\n      result: selectedResult,\r\n    });\r\n  };\r\n\r\n  result() {\r\n    return (\r\n     <></>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 className=\"title\">{this.state.title}</h1>\r\n        <UncontrolledAlert color=\"info\" fade={false}>\r\n        This feature is currently work in progress ..\r\n      </UncontrolledAlert>\r\n\r\n        <div style={{marginLeft:'auto',marginRight:'auto'}}>\r\n        <QierPlayer style= {{margin:'auto'}} srcOrigin=\"https://file-examples-com.github.io/uploads/2017/04/file_example_MP4_480_1_5MG.mp4\" />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\nimport {  Orders } from './components/Orders';\r\nimport {  Movies } from './components/Movies';\r\nimport  Login  from './components/Login';\r\nimport './custom.css'\r\nimport AuthService from './services/AuthService';\r\nimport { Player } from './components/Player';\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n       currentUser: undefined,\r\n       sessionExpired:true\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n    const sessionExpired = await AuthService.isSessionExpired();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,  \r\n        sessionExpired:sessionExpired      \r\n      });\r\n    }\r\n  }\r\n\r\n  render () {\r\n    //if(this.state.currentUser === undefined) return (<><Login></Login></>) ;\r\n    if(this.state.sessionExpired) return (<><Login></Login></>) ;\r\n\r\n    return (\r\n\r\n      <Layout>\r\n         <Switch>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/movies' component={Movies} />\r\n        <Route path='/fetch-orders' component={Orders} />\r\n        <Route path='/login' component={Login} />\r\n        <Route path='/player' component={Player} />\r\n        </Switch>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}