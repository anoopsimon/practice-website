{"version":3,"sources":["services/AuthService.js","components/NavMenu.js","components/Layout.js","services/MoviesService.js","components/Spinner.js","components/Home.js","components/Orders.js","components/Movies.js","components/Signup.js","components/Login.js","components/Player.js","App.js","registerServiceWorker.js","index.js"],"names":["API_URL","process","headers","username","password","registrationResponse","error","success","statusCode","axios","post","email","id","uuidv4","then","resp","catch","console","log","response","data","status","loginResponse","accessToken","localStorage","setItem","JSON","stringify","this","clearFromLocalStorage","getToken","isJwtExpired","keys","map","key","index","removeItem","parse","getItem","NavMenu","props","toggleNavbar","bind","logOut","state","collapsed","title","setState","AuthService","logout","window","location","reload","Navbar","className","light","Container","NavbarBrand","tag","Link","to","alt","src","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","displayName","name","Layout","children","fetch","json","Spinner","color","size","loading","Home","shuffleMovies","array","sort","Math","random","slice","movies","MoviesService","getSuggestions","movieSuggestions","movie","Card","style","width","height","marginTop","CardImg","top","image","CardBody","CardTitle","CardSubtitle","genre","CardText","description","Button","CardDeck","Orders","forecasts","populateRentalHistory","rentalHistory","contents","renderForecastsTable","borderRadius","Table","aria-labelledby","forecast","date","releaseDate","price","rating","numberOfStars","starRatedColor","starDimension","Movies","handleOnSearch","selectedResult","result","currentCount","incrementCounter","render","getMovieList","list","all","onSelect","newSelectedItem","Signup","renderLoginErrors","view","UncontrolledAlert","fade","marginLeft","textAlign","display","backgroundColor","message","handleRegistration","e","a","preventDefault","confirmPassword","createUser","registrationStatus","login","loginStatus","history","push","onChangeUsername","target","value","onChangePassword","onChangeConfirmPassword","border","alignSelf","paddingBottom","Form","onSubmit","FormGroup","Input","type","placeholder","aria-label","onChange","withRouter","Login","handleLogin","toggle","open","renderSignup","Modal","ModalHeader","ModalBody","register","modal","Row","Col","sm","md","offset","align","href","Player","marginRight","margin","srcOrigin","App","currentUser","undefined","sessionExpired","user","getCurrentUser","isSessionExpired","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","basename","URL","origin","addEventListener","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"mWAKMA,EAAUC,2CAEVC,EAAU,CACd,eAAgB,oBA8IH,M,4IAlIIC,EAAUC,G,8EACnBC,EAAqB,CACzBC,MAAM,KACNC,SAAQ,EACRC,WAAW,G,SAEPC,IACHC,KACCV,EAAU,QACV,CACEI,SAAUA,EACVO,MAAOR,EACPS,GAAIC,eAENX,GAEDY,MAAK,SAACC,GACLV,EAAqBE,SAAQ,KAE9BS,OAAM,SAACV,GACNW,QAAQC,IAAIZ,GACZD,EAAqBC,MAAQA,EAAMa,SAASC,KAC5Cf,EAAqBE,SAAU,EAC/BF,EAAqBG,WAAYF,EAAMa,SAASE,U,gCAG3ChB,G,yKASCM,EAAOP,G,8EACXkB,EAAc,CAClBhB,MAAM,KACNC,SAAQ,EACRC,WAAW,G,SAEAC,IACVC,KAAKV,EAAU,QAAS,CACvBW,QACAP,aAEDU,MAAK,SAACK,GAUL,OATIA,EAASC,KAAKG,cAChBC,aAAaC,QA1DP,OA0D0BC,KAAKC,UAAUhB,IAC/Ca,aAAaC,QA1DN,QA4DLC,KAAKC,UAAUR,EAASC,KAAKG,eAGjCD,EAAcf,SAAQ,EACtBe,EAAcd,WAAWW,EAASE,OAC3BC,KACNN,OAAM,SAAAV,GAOP,OALAW,QAAQC,IAAI,wBAAyBZ,EAAMa,SAASC,MACpDE,EAAchB,MAAMA,EAAMa,SAASC,KACnCE,EAAcf,SAAQ,EACtBe,EAAcd,WAAYF,EAAMa,SAASE,OAElCC,K,qSAQLM,KAAKC,sBAAsB,CAlFrB,OACC,U,4PAqFU,OAApBD,KAAKE,W,0CAA4B,G,uBACvBC,uBAAaH,KAAKE,Y,mOAOLE,G,iFAEpBA,EAAKC,KAAK,SAACC,EAAIC,GAAL,OACdX,aAAaY,WAAWF,M,iIAWnB/B,EAAUQ,EAAOP,GACxB,OAAOK,IAAMC,KAAKV,EAAU,SAAU,CACpCG,WACAQ,QACAP,e,uCASF,OAAOsB,KAAKW,MAAMb,aAAac,QAzHnB,W,iCAiIZ,OAAId,aAAac,QAhIJ,SAkILZ,KAAKW,MAAMb,aAAac,QAlInB,UAqIN,S,MC3IEC,EAAb,kDAGE,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IAEDC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,gBAEd,EAAKE,MAAQ,CACXC,WAAW,EACXC,MAAM,gBARU,EAHtB,2DAgBIlB,KAAKmB,SAAS,CACZF,WAAYjB,KAAKgB,MAAMC,cAjB7B,yJAqBUG,EAAYC,SArBtB,OAsBIC,OAAOC,SAASC,SAtBpB,gIA0BI,OACE,gCACE,kBAACC,EAAA,EAAD,CAAQC,UAAU,+EAA+EC,OAAK,GACpG,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,IAAKC,IAAMC,GAAG,KAC3B,yBAAKC,IAAI,GAAGC,IAAI,cAEhB,kBAACC,EAAA,EAAD,CAAeC,QAASpC,KAAKa,aAAca,UAAU,SACrD,kBAACW,EAAA,EAAD,CAAUX,UAAU,uCAAuCY,QAAStC,KAAKgB,MAAMC,UAAWsB,QAAM,GAC9F,wBAAIb,UAAU,wBACZ,kBAACc,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASX,IAAKC,IAAML,UAAU,YAAYM,GAAG,KAA7C,SAEF,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASX,IAAKC,IAAML,UAAU,YAAYM,GAAG,WAA7C,WAEF,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASX,IAAKC,IAAML,UAAU,YAAYM,GAAG,iBAA7C,eAEF,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASX,IAAKC,IAAML,UAAU,YAAYM,GAAG,WAA7C,UAEF,kBAACQ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASX,IAAKC,IAAML,UAAU,YAAYM,GAAG,SAASI,QAASpC,KAAKe,QAApE,oBAjDlB,GAA6B2B,aAAhB/B,EACJgC,YAAchC,EAAQiC,KCFxB,IAAMC,EAAb,uKAII,OACE,6BACE,kBAAC,EAAD,MACA,kBAACjB,EAAA,EAAD,KACG5B,KAAKY,MAAMkC,eARtB,GAA4BJ,aAAfG,EACJF,YAAcE,EAAOD,K,4ECcf,M,yOAfYG,MAAM3E,uD,cAAvBmB,E,gBACOA,EAASyD,O,uTAICD,MAAM3E,yD,cAAvBmB,E,gBACOA,EAASyD,O,8SAICD,MAAM3E,kD,cAAvBmB,E,gBACOA,EAASyD,O,kKCNLC,E,kDACnB,WAAYrC,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CACTkC,MAAM,UACNC,KAAK,KAJQ,E,qDASjB,OACE,oCACE,yBAAKzB,UAAU,UACH,kBAAC,IAAD,CACRwB,MAAOlD,KAAKgB,MAAMkC,MAClBE,QAASpD,KAAKY,MAAMwC,QACpBD,KAAMnD,KAAKgB,MAAMmC,a,GAhBQT,aCDxBW,EAAb,kDAGE,WAAYzC,GAAO,IAAD,8BAChB,cAAMA,IAeR0C,cAAgB,SAACC,GAAD,OAAWA,EAAMC,MAAK,kBAAMC,KAAKC,SAAW,MAAKC,MAAM,EAAG,IAdxE,EAAK3C,MACL,CACE4C,OAAS,GACTR,SAAQ,GALM,EAHpB,sLAaIpD,KAbJ,SAcoB6D,EAAcC,iBAdlC,yBAcMF,OAdN,KAeMR,SAAQ,GAfd,KAaSjC,SAbT,qJAsBI,GAAGnB,KAAKgB,MAAMoC,QAAS,OAAO,kBAAC,EAAD,MAG9B,IAAMW,EAAmB/D,KAAKsD,cAActD,KAAKgB,MAAM4C,QAAQvD,KAAI,SAAC2D,EAAM1D,GAAP,OACnE,kBAAC2D,EAAA,EAAD,CAAM3D,IAAKA,EAAK4D,MAAO,CAACC,MAAM,QAAQC,OAAO,QAAQC,UAAU,OAC/D,kBAACC,EAAA,EAAD,CAASC,KAAG,EAACrC,IAAK8B,EAAMQ,MAAOvC,IAAI,mBACnC,kBAACwC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAW5C,IAAI,MAAMkC,EAAMpB,MAC3B,kBAAC+B,EAAA,EAAD,CAAc7C,IAAI,KAAKJ,UAAU,mBAAmBsC,EAAMY,OAC1D,kBAACC,EAAA,EAAD,KAAWb,EAAMc,aACjB,kBAACC,EAAA,EAAD,CAAQrD,UAAU,gBAAlB,oBAKF,OACE,6BACE,wBAAIA,UAAU,SAAd,4BAC2B,6BAD3B,0BAIF,kBAACsD,EAAA,EAAD,KACGjB,QA5CT,GAA0BrB,aAAbW,EACJV,YAAcU,EAAKT,K,8BCFfqC,EAAb,kDAGE,WAAYrE,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CACXkE,UAAW,GACX9B,SAAS,EACTF,MAAO,SACPhC,MAAO,wBANQ,EAHrB,gMAcgC2C,EAAcsB,wBAd9C,OAcUC,EAdV,OAeIpF,KAAKmB,SAAS,CAAE+D,UAAWE,EAAehC,SAAS,IAfvD,qIA0DI,IAAIiC,EAAWrF,KAAKgB,MAAMoC,QACxB,kBAAC,EAAD,MAEA6B,EAAOK,qBAAqBtF,KAAKgB,MAAMkE,WAGzC,OACE,6BACE,wBAAIxD,UAAU,SAAS1B,KAAKgB,MAAME,OAClC,sFACCmE,MApET,4CAkB8BH,GAC1B,OACE,kBAACjB,EAAA,EAAD,CAAMC,MAAO,CAAEqB,aAAc,SAC3B,kBAACC,EAAA,EAAD,CAAOC,kBAAgB,cACrB,+BACE,4BACE,qCACA,qCACA,4CACA,qCACA,sCACA,4CAGJ,+BACGP,EAAU7E,KAAI,SAACqF,GAAD,OACb,wBAAIpF,IAAKoF,EAASC,MAChB,4BAAKD,EAAS1B,OACd,4BAAK0B,EAASd,OACd,4BAAKc,EAASE,aACd,4BAAKF,EAASG,OACd,4BACE,kBAAC,IAAD,CACEC,OAAQJ,EAASI,OACjBC,cAAe,EACfnD,KAAK,SACLoD,eAAe,SACfC,cAAc,UAGlB,4BAAKP,EAASC,iBAhD9B,GAA4BjD,aAAfuC,EACJtC,YAAcsC,EAAOrC,K,qBCOjBsD,EAAb,kDAGE,WAAYtF,GAAQ,IAAD,8BACjB,cAAMA,IAsBRuF,eAAiB,SAACC,GAChB/G,QAAQC,IAAI8G,GACZ,EAAKjF,SAAS,CACZkF,OAAQD,KAxBV,EAAKpF,MAAQ,CACXsF,aAAc,EACdpF,MAAO,gBACP0C,OAAQ,GACRyC,OAAQ,MAEV,EAAKE,iBAAmB,EAAKA,iBAAiBzF,KAAtB,gBACxB,EAAK0F,OAAS,EAAKA,OAAO1F,KAAZ,gBATG,EAHrB,gMAgBuB+C,EAAc4C,eAhBrC,OAgBUjH,EAhBV,OAiBIQ,KAAKmB,SAAS,CAAEyC,OAAQpE,EAAM4D,SAAS,IAjB3C,+IAqBIpD,KAAKmB,SAAS,CACZmF,aAActG,KAAKgB,MAAMsF,aAAe,MAtB9C,+BAkCI,OACE,kBAACrC,EAAA,EAAD,CAAMvC,UAAU,aACd,kBAAC4C,EAAA,EAAD,CACEC,KAAG,EACHJ,MAAM,KACNC,OAAO,QACPlC,IAAI,kBACJD,IAAI,mBAEN,kBAACwC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAW5C,IAAI,MAAf,WACA,kBAAC6C,EAAA,EAAD,CAAc7C,IAAI,KAAKJ,UAAU,mBAAjC,mCAGA,kBAACmD,EAAA,EAAD,oKAG4B,KAE5B,kBAACE,EAAA,EAAD,CAAQrD,UAAU,gBAAlB,WArDV,+BA2DY,IAAD,OACP,OACE,oCACE,wBAAIA,UAAU,SAAS1B,KAAKgB,MAAME,OAClC,yBAAKQ,UAAU,SACb,kBAAC,IAAD,CACEgF,KAAM1G,KAAKgB,MAAM4C,OACjBxD,KAAM,CAAC,SAAU,SACjB+D,MAAO,IACPD,MAAO,CAAEyC,IAAK,SACdC,SAAU,SAACC,GACT,EAAKV,eAAeU,IAEtBnF,UAAU,WAIS,OAAtB1B,KAAKgB,MAAMqF,OAAkB,gCAAWrG,KAAKqG,cA5EtD,GAA4B3D,aAAfwD,EACJvD,YAAcuD,EAAOtD,K,6FCRxBkE,G,kDACJ,WAAYlG,GAAQ,IAAD,8BACjB,cAAMA,IAaRmG,kBAAmB,SAACrI,GAClB,IAAMsI,EAAMtI,EAAO,kBAACuI,EAAA,EAAD,CAAoBC,MAAM,EAAMhD,MAAO,CAACiD,WAAW,MAAM9C,UAAU,MAAM+C,UAAU,SAASC,QAAQ,SAASC,gBAAgB,yBAAyBpE,MAAM,QAAQqC,aAAa,QAAS,EAAKvE,MAAMuG,SAA8B,GAErP,OAAO,6BACN,2BAAIP,KAlBW,EAsBlBQ,mBAtBkB,uCAsBG,WAAMC,GAAN,iBAAAC,EAAA,yDACpBD,EAAEE,iBAEE,EAAK3G,MAAMxC,WAAa,EAAKwC,MAAM4G,gBAHnB,uBAKlB,EAAKzG,SAAS,CACboG,QAAQ,sBACR7I,OAAM,IAPW,iCAYpB,EAAKyC,SAAS,CACZiC,SAAS,IAbS,SAeWhC,EAAYyG,WAAW,EAAK7G,MAAMzC,SAAS,EAAKyC,MAAMxC,UAfjE,cAehBsJ,EAfgB,iBAgBI1G,EAAY2G,MAAM,EAAK/G,MAAMzC,SAAS,EAAKyC,MAAMxC,UAhBrD,WAgBhBwJ,EAhBgB,QAiBjBF,EAAmBnJ,UAAWqJ,EAAYrJ,QAjBzB,wBAmBlB,EAAKiC,MAAMqH,QAAQC,KAAK,KACxB5G,OAAOC,SAASC,SApBE,2BAuBpB,EAAKL,SAAS,CACZiC,SAAS,EACT1E,OAAM,EACN6I,QAAQO,EAAmBpJ,MAAQsJ,EAAYtJ,QA1B7B,4CAtBH,wDAoDnByJ,iBAAiB,SAACV,GAChB,EAAKtG,SAAS,CACZ5C,SAAUkJ,EAAEW,OAAOC,SAtDJ,EAyDnBC,iBAAiB,SAACb,GAChB,EAAKtG,SAAS,CACZ3C,SAAUiJ,EAAEW,OAAOC,SA3DJ,EA8DnBE,wBAAwB,SAACd,GACvB,EAAKtG,SAAS,CACZyG,gBAAiBH,EAAEW,OAAOC,SA9D1B,EAAKrH,MAAQ,CACbzC,SAAU,GACVC,SAAU,GACVoJ,gBAAiB,GACjBxE,SAAS,EACT1E,OAAM,EAEN6I,QAAQ,IATO,E,qDAsEjB,OAAIvH,KAAKgB,MAAMoC,QAAiB,kBAAC,EAAD,CAASA,QAASpD,KAAKgB,MAAMoC,UAG3D,oCACE,kBAACxB,EAAA,EAAD,KAEM,kBAACqC,EAAA,EAAD,CAAMC,MAAO,CAACsE,OAAO,SACrB,yBAAKvG,IAAI,OAAOC,IAAI,WAAWgC,MAAO,CAACC,MAAM,MAAMsE,UAAU,SAASC,cAAc,QAClF,kBAACC,GAAA,EAAD,CAAMC,SAAU5I,KAAKwH,oBAEnB,kBAACqB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,KAAK,QACLnG,KAAK,QACL5D,GAAG,WACHgK,YAAY,WACZC,aAAW,oBACXvH,UAAU,KACVwH,SAAUlJ,KAAKmI,oBAGnB,kBAACU,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,KAAK,WACLnG,KAAK,WACL5D,GAAG,MACHgK,YAAY,WACZC,aAAW,WACXvH,UAAU,KACVwH,SAAUlJ,KAAKsI,oBAGnB,kBAACO,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,KAAK,WACLnG,KAAK,WACL5D,GAAG,YACHgK,YAAY,mBACZC,aAAW,mBACXvH,UAAU,KACVwH,SAAUlJ,KAAKuI,2BAGnB,kBAACxD,EAAA,EAAD,CACE/F,GAAG,WACHiK,aAAW,eACXvH,UAAU,gBAHZ,YAYD1B,KAAK+G,kBAAkB/G,KAAKgB,MAAMtC,c,GA9H9BgE,aAuINyG,eAAWrC,ICpIpBsC,G,kDACJ,WAAYxI,GAAQ,IAAD,8BACjB,cAAMA,IAcPyI,YAfkB,uCAeJ,WAAM5B,GAAN,eAAAC,EAAA,6DACbD,EAAEE,iBACF,EAAKxG,SAAS,CACZiC,SAAS,IAHE,SAMWhC,EAAY2G,MAAM,EAAK/G,MAAMzC,SAAS,EAAKyC,MAAMxC,UAN5D,YAMTwJ,EANS,QAOErJ,QAPF,uBASX,EAAKiC,MAAMqH,QAAQC,KAAK,KACxB5G,OAAOC,SAASC,SAVL,0BAab,EAAKL,SAAS,CACZiC,SAAS,EACT1E,OAAM,EACN6I,QAAQS,EAAYtJ,QAhBT,4CAfI,wDAmCnByJ,iBAAiB,SAACV,GAChB,EAAKtG,SAAS,CACZ5C,SAAUkJ,EAAEW,OAAOC,SArCJ,EAwCnBC,iBAAiB,SAACb,GAChB,EAAKtG,SAAS,CACZ3C,SAAUiJ,EAAEW,OAAOC,SA1CJ,EA6ClBiB,OAAS,WACP,EAAKnI,SACH,CACCoI,MAAM,EAAKvI,MAAMuI,QAhDJ,EAoDrBC,aAAc,WACZ,OACE,6BACE,kBAACC,GAAA,EAAD,CAAOnH,OAAQ,EAAKtB,MAAMuI,KAAMD,OAAQ,EAAKA,QAC3C,kBAACI,GAAA,EAAD,CAAapH,OAAQ,EAAKtB,MAAMuI,KAAMD,OAAQ,EAAKA,QAAnD,uBAGA,kBAACK,GAAA,EAAD,KACA,kBAAC,GAAD,UA5Da,EAoEpB5C,kBAAmB,SAACrI,GACnB,IAAMsI,EAAMtI,EAAO,kBAACuI,EAAA,EAAD,CAAoBC,MAAM,EAAMhD,MAAO,CAACiD,WAAW,MAAM9C,UAAU,KAAK+C,UAAU,SAASC,QAAQ,SAASC,gBAAgB,yBAAyBpE,MAAM,QAAQqC,aAAa,QAAS,EAAKvE,MAAMuG,SAA8B,GAEpP,OAAO,6BACN,2BAAIP,KAxEa,EA4EpB4C,SAAU,WAEP,EAAKzI,SAAS,CACZoI,MAAK,KA7EL,EAAKvI,MAAQ,CACbzC,SAAU,GACVC,SAAU,GACV4E,SAAS,EACT1E,OAAM,EAEN6I,QAAQ,GACRgC,MAAK,EACLM,OAAM,GAVS,E,qDAoFjB,OAAI7J,KAAKgB,MAAMoC,QAAiB,kBAAC,EAAD,CAASA,QAASpD,KAAKgB,MAAMoC,UAG3D,oCACE,kBAACxB,EAAA,EAAD,KACE,kBAACkI,GAAA,EAAD,CAAK5F,MAAO,CAAEG,UAAW,QACvB,kBAAC0F,GAAA,EAAD,CAAKC,GAAG,KAAKC,GAAI,CAAE9G,KAAM,EAAG+G,OAAQ,IAClC,kBAACjG,EAAA,EAAD,CAAMvC,UAAU,aAChB,yBAAKO,IAAI,OAAOC,IAAI,aACpB,uBAAGR,UAAU,OAAOyI,MAAM,UAA1B,WACE,kBAACxB,GAAA,EAAD,CAAMC,SAAU5I,KAAKqJ,aAEnB,kBAACR,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,KAAK,QACLnG,KAAK,QACL5D,GAAG,WACHgK,YAAY,WACZC,aAAW,oBACXvH,UAAU,KACVwH,SAAUlJ,KAAKmI,oBAGnB,kBAACU,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,KAAK,WACLnG,KAAK,WACL5D,GAAG,MACHgK,YAAY,WACZC,aAAW,WACXvH,UAAU,KACVwH,SAAUlJ,KAAKsI,oBAGnB,kBAACvD,EAAA,EAAD,CACE/F,GAAG,WACHiK,aAAW,eACXvH,UAAU,gBAHZ,WASF,uBAAGA,UAAU,SAASyI,MAAM,UAAS,uBAAGlB,aAAW,kBAAkBmB,KAAK,KAArC,qBACrC,uBAAG1I,UAAU,SAASyI,MAAM,SAAS/H,QAASpC,KAAK4J,UAAnD,yBACC5J,KAAK+G,kBAAkB/G,KAAKgB,MAAMtC,OAClCsB,KAAKwJ,wB,GAnIF9G,aA4ILyG,eAAWC,I,6BCnJbiB,GAAb,kDAGE,WAAYzJ,GAAQ,IAAD,8BACjB,cAAMA,IAoBRuF,eAAiB,SAACC,GAChB/G,QAAQC,IAAI8G,GACZ,EAAKjF,SAAS,CACZkF,OAAQD,KAtBV,EAAKpF,MAAQ,CACXsF,aAAc,EACdpF,MAAO,0BACPmF,OAAQ,MAEV,EAAKE,iBAAmB,EAAKA,iBAAiBzF,KAAtB,gBACxB,EAAK0F,OAAS,EAAKA,OAAO1F,KAAZ,gBARG,EAHrB,6SAmBId,KAAKmB,SAAS,CACZmF,aAActG,KAAKgB,MAAMsF,aAAe,MApB9C,+BAgCI,OACC,uCAjCL,+BAsCI,OACE,oCACE,wBAAI5E,UAAU,SAAS1B,KAAKgB,MAAME,OAClC,kBAAC+F,EAAA,EAAD,CAAmB/D,MAAM,OAAOgE,MAAM,GAAtC,iDAIA,yBAAKhD,MAAO,CAACiD,WAAW,OAAOmD,YAAY,SAC3C,kBAAC,KAAD,CAAYpG,MAAQ,CAACqG,OAAO,QAASC,UAAU,6FA9CvD,GAA4B9H,aAAf2H,GACJ1H,YAAc0H,GAAOzH,K,ICOT6H,G,kDAGnB,WAAY7J,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CACV0J,iBAAaC,EACbC,gBAAe,GAJD,E,yLASXC,EAAOzJ,EAAY0J,iB,SACI1J,EAAY2J,mB,OAAnCH,E,OAEFC,GACF7K,KAAKmB,SAAS,CACZuJ,YAAaG,EACbD,eAAeA,I,qIASnB,OAAG5K,KAAKgB,MAAM4J,eAAwB,oCAAE,kBAAC,GAAD,OAItC,kBAAC,EAAD,KACG,kBAAC,IAAD,KACD,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAIC,UAAW7H,IACjC,kBAAC,IAAD,CAAO4H,KAAK,UAAUC,UAAWhF,IACjC,kBAAC,IAAD,CAAO+E,KAAK,gBAAgBC,UAAWjG,IACvC,kBAAC,IAAD,CAAOgG,KAAK,SAASC,UAAW9B,KAChC,kBAAC,IAAD,CAAO6B,KAAK,UAAUC,UAAWb,KACjC,kBAAC,IAAD,CAAOY,KAAK,UAAUC,UAAWpE,W,GAtCRpE,aAAZ+H,GACZ9H,YAAc8H,GAAI7H,KCH3B,IAAMuI,GAAcC,QACW,cAA7B9J,OAAOC,SAAS8J,UAEa,UAA7B/J,OAAOC,SAAS8J,UAEhB/J,OAAOC,SAAS8J,SAASC,MACvB,2DA6BJ,SAASC,GAAiBC,GACxBC,UAAUC,cACP9B,SAAS4B,GACTtM,MAAK,SAAAyM,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7K,QACfyK,UAAUC,cAAcM,WAK1B3M,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBF,OAAM,SAAAV,GACLW,QAAQX,MAAM,4CAA6CA,MC/DjE,IAAMuN,GAAUC,SAASC,qBAAqB,QAAQ,GAAGC,aAAa,QAChEC,GAAcH,SAASI,eAAe,QAE5CC,IAAS/F,OACP,kBAAC,IAAD,CAAegG,SAAUP,IACvB,kBAAC,GAAD,OAEFI,IDMa,WACb,GAA6C,kBAAmBZ,UAAW,CAGzE,GADkB,IAAIgB,IAAIpO,oBAAwBiD,OAAOC,UAC3CmL,SAAWpL,OAAOC,SAASmL,OAIvC,OAGFpL,OAAOqL,iBAAiB,QAAQ,WAC9B,IAAMnB,EAAK,UAAMnN,oBAAN,sBAEP8M,GAwCV,SAAkCK,GAEhCzI,MAAMyI,GACHtM,MAAK,SAAAK,GAGkB,MAApBA,EAASE,SACuD,IAAhEF,EAASjB,QAAQsO,IAAI,gBAAgBC,QAAQ,cAG7CpB,UAAUC,cAAcoB,MAAM5N,MAAK,SAAAyM,GACjCA,EAAaoB,aAAa7N,MAAK,WAC7BoC,OAAOC,SAASC,eAKpB+J,GAAgBC,MAGnBpM,OAAM,WACLC,QAAQC,IACN,oEA5DA0N,CAAwBxB,GAGxBD,GAAgBC,OCvBxByB,I","file":"static/js/main.caca66eb.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { isJwtExpired } from 'jwt-check-expiration';\n\n\nconst API_URL = process.env.REACT_APP_MOVIES_SERVICE_URL;\n\nconst headers = {\n  \"Content-Type\": \"application/json\",\n};\nconst KEYS_USER=\"user\";\nconst KEYS_TOKEN=\"token\";\n\nclass AuthService {\n  \n  /**\n   * Creates a user\n   * @param {*} username \n   * @param {*} password \n   */\n  async createUser(username, password) {\n    const registrationResponse={\n      error:null,\n      success:false,\n      statusCode:0\n    };\n    await axios\n      .post(\n        API_URL + \"users\",\n        {\n          password: password,\n          email: username,\n          id: uuidv4(),\n        },\n        headers\n      )\n      .then((resp) => {\n        registrationResponse.success=true;        \n      })\n      .catch((error) => {\n        console.log(error);\n        registrationResponse.error = error.response.data;\n        registrationResponse.success = false;\n        registrationResponse.statusCode= error.response.status;\n      });\n      \n      return registrationResponse;\n  }\n\n  /**\n   * Perform login returns auth token JWT\n   * @param {*} username \n   * @param {*} password \n   * @returns \n   */\n  async login(email, password) {\n    const loginResponse={\n      error:null,\n      success:false,\n      statusCode:0\n    };\n    return await axios\n      .post(API_URL + \"login\", {\n        email,\n        password,\n      })\n      .then((response) => {\n        if (response.data.accessToken) {\n          localStorage.setItem(KEYS_USER, JSON.stringify(email));\n          localStorage.setItem(\n            KEYS_TOKEN,\n            JSON.stringify(response.data.accessToken)\n          );\n        }\n        loginResponse.success=true;\n        loginResponse.statusCode=response.status;\n        return loginResponse;\n      }).catch(error => {\n        //\"Incorrect password\"\n        console.log('login failed due to :'+ error.response.data)\n        loginResponse.error=error.response.data;\n        loginResponse.success=false;\n        loginResponse.statusCode= error.response.status;\n\n        return loginResponse;\n     });\n  }\n\n  /**\n   * Logout from the application and clear local storage\n   */\n  async logout() {\n    await this.clearFromLocalStorage([KEYS_USER,KEYS_TOKEN]);\n  }\n\n  async isSessionExpired() {\n    if(this.getToken() === null) return true;\n    return await isJwtExpired(this.getToken());\n  }\n\n  /**\n   * util function to clear local storage\n   * @param {*} keys \n   */\n  async clearFromLocalStorage(keys)\n  {\n    await keys.map( (key,index) => (\n      localStorage.removeItem(key)\n     )); \n  }\n\n  /**\n   * Register a user account\n   * @param {Regr} username \n   * @param {*} email \n   * @param {*} password \n   * @returns \n   */\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password,\n    });\n  }\n\n  /**\n   * \n   * @returns Get current logged in user from local storage\n   */\n  getCurrentUser() {        \n    return JSON.parse(localStorage.getItem(KEYS_USER));\n  }\n\n  /**\n   * get authentication token\n   * @returns \n   */\n  getToken() {\n    if (localStorage.getItem(KEYS_TOKEN)) \n    {\n     return JSON.parse(localStorage.getItem(KEYS_TOKEN));;\n    }\n\n    return null;\n  }\n}\n\n\n\nexport default new AuthService();\n","import React, { Component } from 'react';\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../services/AuthService';\n\nexport class NavMenu extends Component {\n  static displayName = NavMenu.name;\n\n  constructor (props) {\n    super(props);\n\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      collapsed: true,\n      title:'Movie Rental'\n    };\n  }\n\n  toggleNavbar () {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n  async logOut() {\n    await AuthService.logout();\n    window.location.reload();\n  }\n\n  render () {\n    return (\n      <header>\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\n          <Container>\n            <NavbarBrand tag={Link} to=\"/\">\n            <img alt=\"\" src=\"logo.png\"></img>\n            </NavbarBrand>\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\n              <ul className=\"navbar-nav flex-grow\">\n                <NavItem>\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/movies\">Movies</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/fetch-orders\">My Rentals</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/player\">Watch</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/login\" onClick={this.logOut}>Logout</NavLink>\n                </NavItem>\n              </ul>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Container } from 'reactstrap';\nimport { NavMenu } from './NavMenu';\n\nexport class Layout extends Component {\n  static displayName = Layout.name;\n\n  render () {\n    return (\n      <div>\n        <NavMenu />\n        <Container>\n          {this.props.children}\n        </Container>\n      </div>\n    );\n  }\n}\n","const API_URL = process.env.REACT_APP_MOVIES_SERVICE_URL;\n\nclass MoviesService {\n  async getSuggestions() {\n    const response = await fetch(API_URL + \"suggestions\");\n    return await response.json();\n  }\n\n  async populateRentalHistory() {\n    const response = await fetch(API_URL + \"rentalHistory\");\n    return await response.json();\n  }\n\n  async getMovieList() {\n    const response = await fetch(API_URL + \"movies\");\n    return await response.json();\n  }\n}\n\nexport default new MoviesService();\n","/**\n * @author Anoop Simon\n * @create date 2021-07-05 11:33:57\n * @modify date 2021-07-05 11:33:57\n * @desc A re -usable loader component\n */\nimport React, { Component } from \"react\";\nimport FadeLoader from \"react-spinners/FadeLoader\";\n\nexport default class Spinner extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        color:'#8C55AA',\n        size:600\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"loader\">\n                    <FadeLoader\n            color={this.state.color}\n            loading={this.props.loading}\n            size={this.state.size}\n          ></FadeLoader>\n        \n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button,CardDeck\n} from 'reactstrap';\nimport MoviesService from \"../services/MoviesService\";\nimport Spinner from \"./Spinner\";\nexport class Home extends Component {\n  static displayName = Home.name;\n\n  constructor(props){\n    super(props);\n    this.state =\n    {\n      movies : [],\n      loading:true\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      movies: await MoviesService.getSuggestions(),\n      loading:false\n    });\n  }\n\n  shuffleMovies = (array) => array.sort(() => Math.random() - 0.5).slice(0, 3);\n\n  render() {\n    if(this.state.loading) return(<Spinner></Spinner>)\n\n\n    const movieSuggestions = this.shuffleMovies(this.state.movies).map((movie,key) => \n    <Card key={key} style={{width:'350px',height:'400px',marginTop:'3%'}}>\n    <CardImg top src={movie.image} alt=\"Card image cap\" />\n    <CardBody>\n      <CardTitle tag=\"h5\">{movie.name}</CardTitle>\n      <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{movie.genre}</CardSubtitle>\n      <CardText>{movie.description}</CardText>\n      <Button className=\"styledButton\">Buy Or Rent</Button>\n    </CardBody>\n  </Card>\n    \n    ) ;\n    return (\n      <div>\n        <h1 className=\"title\">\n          MOVIES TO BUY OR RENT ON <br></br>\n          BLU-RAY, DVD & DIGITAL\n        </h1>\n      <CardDeck>\n        {movieSuggestions}\n      </CardDeck>\n     \n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Table } from \"reactstrap\";\nimport StarRatings from \"react-star-ratings\";\nimport {  Card } from \"reactstrap\";\nimport Spinner from \"./Spinner\";\nimport MoviesService from \"../services/MoviesService\";\n\nexport class Orders extends Component {\n  static displayName = Orders.name;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      forecasts: [],\n      loading: true,\n      color: \"purple\",\n      title: \"Movie Rental History\",\n    };\n  }\n\n  async componentDidMount() {\n    const rentalHistory = await MoviesService.populateRentalHistory();\n    this.setState({ forecasts: rentalHistory, loading: false });\n  }\n\n  static renderForecastsTable(forecasts) {\n    return (\n      <Card style={{ borderRadius: \"10px\" }}>\n        <Table aria-labelledby=\"tabelLabel\">\n          <thead>\n            <tr>\n              <th>Movie</th>\n              <th>Genre</th>\n              <th>Release Date</th>\n              <th>Price</th>\n              <th>Rating</th>\n              <th>Order Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {forecasts.map((forecast) => (\n              <tr key={forecast.date}>\n                <td>{forecast.movie}</td>\n                <td>{forecast.genre}</td>\n                <td>{forecast.releaseDate}</td>\n                <td>{forecast.price}</td>\n                <td>\n                  <StarRatings\n                    rating={forecast.rating}\n                    numberOfStars={5}\n                    name=\"rating\"\n                    starRatedColor=\"yellow\"\n                    starDimension=\"18px\"\n                  />\n                </td>\n                <td>{forecast.date}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Card>\n    );\n  }\n\n  render() {\n    let contents = this.state.loading ? (\n      <Spinner />\n    ) : (\n      Orders.renderForecastsTable(this.state.forecasts)\n    );\n\n    return (\n      <div>\n        <h1 className=\"title\">{this.state.title}</h1>\n        <p>Below is the list of movies you have rented in the past</p>\n        {contents}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport FuzzySearch from \"react-fuzzy\";\n\nimport {\n  Card,\n  Button,\n  CardImg,\n  CardTitle,\n  CardText,\n  CardSubtitle,\n  CardBody,\n} from \"reactstrap\";\nimport MoviesService from \"../services/MoviesService\";\n\n\nexport class Movies extends Component {\n  static displayName = Movies.name;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentCount: 0,\n      title: \"Search Movies\",\n      movies: [],\n      result: null,\n    };\n    this.incrementCounter = this.incrementCounter.bind(this);\n    this.render = this.render.bind(this);\n  }\n\n  async componentDidMount() {\n    const data = await MoviesService.getMovieList();\n    this.setState({ movies: data, loading: false });\n  }\n\n  incrementCounter() {\n    this.setState({\n      currentCount: this.state.currentCount + 1,\n    });\n  }\n\n  handleOnSearch = (selectedResult) => {\n    console.log(selectedResult);\n    this.setState({\n      result: selectedResult,\n    });\n  };\n\n  result() {\n    return (\n      <Card className=\"result sr\">\n        <CardImg\n          top\n          width=\"0%\"\n          height=\"400px\"\n          src=\"img_titanic.jpg\"\n          alt=\"Card image cap\"\n        />\n        <CardBody>\n          <CardTitle tag=\"h5\">Titanic</CardTitle>\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\n            126 wins & 83 nominations total\n          </CardSubtitle>\n          <CardText>\n            Titanic: Directed by James Cameron. With Leonardo DiCaprio, Kate\n            Winslet, Billy Zane, Kathy Bates. A seventeen-year-old aristocrat\n            falls in love with a kind{\" \"}\n          </CardText>\n          <Button className=\"styledButton\">Buy</Button>\n        </CardBody>\n      </Card>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <h1 className=\"title\">{this.state.title}</h1>\n        <div className=\"fuzzy\">\n          <FuzzySearch\n            list={this.state.movies}\n            keys={[\"author\", \"title\"]}\n            width={430}\n            style={{ all: \"unset\" }}\n            onSelect={(newSelectedItem) => {\n              this.handleOnSearch(newSelectedItem);\n            }}\n            className=\"fuzzy\"\n          />\n        </div>\n\n        {this.state.result === null ? <p> </p> : this.result()}\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button, Form, FormGroup,  Input,UncontrolledAlert  } from \"reactstrap\";\nimport { Container } from \"reactstrap\";\nimport { withRouter } from \"react-router\";\nimport Spinner from \"./Spinner\";\n\nimport AuthService from \"../services/AuthService\";\nimport {Card} from \"reactstrap\";\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      loading: false,\n      error:false,\n      //loginErrorMessage:'Invalid Username or Password',\n      message:''\n\n    };\n  }\n\n  renderLoginErrors= (error) => {\n    const view= error? <UncontrolledAlert  fade={true} style={{marginLeft:'20%',marginTop:'15%',textAlign:'center',display:'inline',backgroundColor:'rgba(220, 53, 69, 0.9)',color:'white',borderRadius:'8px'}}>{this.state.message}</UncontrolledAlert >:''\n  \n     return(<div>\n      <p>{view}</p>\n    </div>);\n   }\n\n   handleRegistration = async(e) => {\n    e.preventDefault();\n\n    if (this.state.password !== this.state.confirmPassword) \n    {\n      this.setState({\n       message:'password mismatch !',\n       error:true\n      });\n\n      return;\n    }\n    this.setState({\n      loading: true,\n    });\n    var registrationStatus = await AuthService.createUser(this.state.username,this.state.password);\n    var loginStatus = await AuthService.login(this.state.username,this.state.password);\n    if(registrationStatus.success && loginStatus.success)\n    {\n      this.props.history.push(\"/\");\n      window.location.reload();\n      return;\n    }\n    this.setState({\n      loading: false,\n      error:true,\n      message:registrationStatus.error + loginStatus.error\n    });\n  }\n\n  onChangeUsername=(e)=>{\n    this.setState({\n      username: e.target.value,\n    });\n  }\n  onChangePassword=(e)=>{\n    this.setState({\n      password: e.target.value,\n    });\n  }\n  onChangeConfirmPassword=(e)=>{\n    this.setState({\n      confirmPassword: e.target.value,\n    });\n  }\n\n \n  render() {\n    if (this.state.loading) return (<Spinner loading={this.state.loading}/>);\n\n    return (\n      <>\n        <Container>\n          \n              <Card style={{border:'none'}}>\n              <img alt=\"logo\" src=\"logo.png\" style={{width:'50%',alignSelf:'center',paddingBottom:'2%'}}></img>\n                <Form onSubmit={this.handleRegistration}>\n                 \n                  <FormGroup>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"username\"\n                      placeholder=\"Username\"\n                      aria-label=\"username or email\"\n                      className=\"un\"\n                      onChange={this.onChangeUsername}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"pwd\"\n                      placeholder=\"Password\"\n                      aria-label=\"password\"\n                      className=\"un\"\n                      onChange={this.onChangePassword}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"pwd-cnfrm\"\n                      placeholder=\"confirm password\"\n                      aria-label=\"confirm password\"\n                      className=\"un\"\n                      onChange={this.onChangeConfirmPassword}\n                    />\n                  </FormGroup>\n                  <Button\n                    id=\"loginBtn\"\n                    aria-label=\"Login Button\"\n                    className=\"styledButton\"\n                    \n\n                  >\n                    Sign up\n                  </Button>\n\n\n                </Form>\n                {this.renderLoginErrors(this.state.error)}\n\n              </Card>\n         \n        </Container>\n      </>\n    );\n  }\n}\nexport default withRouter(Signup);\n","import React, { Component } from \"react\";\nimport { Button, Form, FormGroup,  Input,UncontrolledAlert  } from \"reactstrap\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { withRouter } from \"react-router\";\nimport Spinner from \"./Spinner\";\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\n\n\nimport AuthService from \"../services/AuthService\";\nimport {Card} from \"reactstrap\";\nimport Signup from \"./Signup\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      error:false,\n      //loginErrorMessage:'Invalid Username or Password',\n      message:'',\n      open:false,\n      modal:false\n\n    };\n  }\n\n   handleLogin = async(e) => {\n    e.preventDefault();\n    this.setState({\n      loading: true,\n    });\n    //await AuthService.createUser(this.state.username,this.state.password);\n    var loginStatus = await AuthService.login(this.state.username,this.state.password);\n    if(loginStatus.success)\n    {\n      this.props.history.push(\"/\");\n      window.location.reload();\n      return;\n    }\n    this.setState({\n      loading: false,\n      error:true,\n      message:loginStatus.error\n    });\n  }\n\n  onChangeUsername=(e)=>{\n    this.setState({\n      username: e.target.value,\n    });\n  }\n  onChangePassword=(e)=>{\n    this.setState({\n      password: e.target.value,\n    });\n  }\n   toggle = () => {\n     this.setState(\n       { \n        open:!this.state.open\n        })}\n\n\nrenderSignup =()=>{\n  return (\n    <div>\n      <Modal isOpen={this.state.open} toggle={this.toggle} >\n        <ModalHeader isOpen={this.state.open} toggle={this.toggle}>      \n        Join Movie Rental !   \n        </ModalHeader>\n        <ModalBody>\n        <Signup/>\n        </ModalBody>\n        \n      </Modal>\n    </div>\n  );\n}\n\n renderLoginErrors= (error) => {\n  const view= error? <UncontrolledAlert  fade={true} style={{marginLeft:'20%',marginTop:'5%',textAlign:'center',display:'inline',backgroundColor:'rgba(220, 53, 69, 0.9)',color:'white',borderRadius:'8px'}}>{this.state.message}</UncontrolledAlert >:''\n\n   return(<div>\n    <p>{view}</p>\n  </div>);\n }\n \n register =()=> \n {\n    this.setState({\n      open:true\n    });\n }\n\n  render() {\n    if (this.state.loading) return (<Spinner loading={this.state.loading}/>);\n\n    return (\n      <>\n        <Container>\n          <Row style={{ marginTop: \"10%\" }}>\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <Card className=\"loginForm\">\n              <img alt=\"logo\" src=\"logo.png\"></img>\n              <p className=\"sign\" align=\"center\">Sign in</p>\n                <Form onSubmit={this.handleLogin}>\n                 \n                  <FormGroup>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"username\"\n                      placeholder=\"Username\"\n                      aria-label=\"username or email\"\n                      className=\"un\"\n                      onChange={this.onChangeUsername}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"pwd\"\n                      placeholder=\"Password\"\n                      aria-label=\"password\"\n                      className=\"un\"\n                      onChange={this.onChangePassword}\n                    />\n                  </FormGroup>\n                  <Button\n                    id=\"loginBtn\"\n                    aria-label=\"Login Button\"\n                    className=\"styledButton\"\n                  >\n                    Submit\n                  </Button>\n\n                </Form>\n                <p className=\"forgot\" align=\"center\"><a aria-label=\"forgot password\" href=\"/\">Forgot Password?</a></p>\n                <p className=\"forgot\" align=\"center\" onClick={this.register}>New User ? Register  </p>\n                {this.renderLoginErrors(this.state.error)}\n                {this.renderSignup()}\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\nexport default withRouter(Login);\n","import React, { Component } from \"react\";\nimport QierPlayer from 'qier-player';\nimport { UncontrolledAlert } from 'reactstrap';\n\nexport class Player extends Component {\n  static displayName = Player.name;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentCount: 0,\n      title: \"Watch Movies / TV Shows\",\n      result: null,\n    };\n    this.incrementCounter = this.incrementCounter.bind(this);\n    this.render = this.render.bind(this);\n  }\n\n  async componentDidMount() {\n   // this.setState({ movies: data, loading: false });\n  }\n\n  incrementCounter() {\n    this.setState({\n      currentCount: this.state.currentCount + 1,\n    });\n  }\n\n  handleOnSearch = (selectedResult) => {\n    console.log(selectedResult);\n    this.setState({\n      result: selectedResult,\n    });\n  };\n\n  result() {\n    return (\n     <></>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <h1 className=\"title\">{this.state.title}</h1>\n        <UncontrolledAlert color=\"info\" fade={false}>\n        This feature is currently work in progress ..\n      </UncontrolledAlert>\n\n        <div style={{marginLeft:'auto',marginRight:'auto'}}>\n        <QierPlayer style= {{margin:'auto'}} srcOrigin=\"https://file-examples-com.github.io/uploads/2017/04/file_example_MP4_480_1_5MG.mp4\" />\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport { Layout } from './components/Layout';\nimport { Home } from './components/Home';\nimport {  Orders } from './components/Orders';\nimport {  Movies } from './components/Movies';\nimport  Login  from './components/Login';\nimport './custom.css'\nimport AuthService from './services/AuthService';\nimport { Player } from './components/Player';\nimport Signup from './components/Signup';\n\nexport default class App extends Component {\n  static displayName = App.name;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n       currentUser: undefined,\n       sessionExpired:true\n    };\n  }\n\n  async componentDidMount() {\n    const user = AuthService.getCurrentUser();\n    const sessionExpired = await AuthService.isSessionExpired();\n\n    if (user) {\n      this.setState({\n        currentUser: user,  \n        sessionExpired:sessionExpired      \n      });\n    }\n  }\n\n \n\n  render () {\n    //if(this.state.currentUser === undefined) return (<><Login></Login></>) ;\n    if(this.state.sessionExpired) return (<><Login></Login></>) ;\n\n    return (\n\n      <Layout>\n         <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/movies' component={Movies} />\n        <Route path='/fetch-orders' component={Orders} />\n        <Route path='/login' component={Login} />\n        <Route path='/player' component={Player} />\n        <Route path='/signup' component={Signup} />\n        </Switch>\n      </Layout>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <BrowserRouter basename={baseUrl}>\n    <App />\n  </BrowserRouter>,\n  rootElement);\n\nregisterServiceWorker();\n\n"],"sourceRoot":""}