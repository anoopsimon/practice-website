{"version":3,"sources":["services/AuthService.js","components/NavMenu.js","components/Layout.js","services/MoviesService.js","components/Spinner.js","components/Home.js","components/Orders.js","components/Movies.js","components/Login.js","App.js","registerServiceWorker.js","index.js"],"names":["API_URL","localStorage","setItem","JSON","stringify","setTimeout","console","log","username","password","axios","post","then","response","data","accessToken","removeItem","email","parse","getItem","NavMenu","props","toggleNavbar","bind","logOut","state","collapsed","title","this","setState","AuthService","logout","window","location","reload","Navbar","className","light","Container","NavbarBrand","tag","Link","to","alt","src","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","displayName","name","Layout","children","fetch","json","Spinner","color","size","loading","Home","movies","MoviesService","getSuggestions","CardDeck","map","movie","Card","style","width","height","marginTop","CardImg","top","image","CardBody","CardTitle","CardSubtitle","genre","CardText","description","Button","Orders","forecasts","populateRentalHistory","rentalHistory","contents","renderForecastsTable","borderRadius","Table","aria-labelledby","forecast","key","date","releaseDate","price","rating","numberOfStars","starRatedColor","starDimension","Movies","handleOnSearch","selectedResult","result","currentCount","incrementCounter","render","getMovieList","list","keys","all","onSelect","newSelectedItem","Login","handleLogin","message","e","preventDefault","loginAs","history","push","Row","Col","sm","md","offset","align","Form","onSubmit","FormGroup","Input","type","id","placeholder","aria-label","href","withRouter","App","currentUser","undefined","user","getCurrentUser","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","basename","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.54078bf1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nclass AuthService {\r\n\r\n  loginAs(){\r\n        localStorage.setItem(\"user\", JSON.stringify({\"token\":\"ey78788788787asd78asd78sa7d8s7d8a7sd88d7s8a7d8as7d87sd87ad87djkdhkjdhjsadhsa9d8y7s9d78sd789asdsajkdhsajkdh\"}));\r\n        setTimeout(() => { console.log('wait!!!!!')  }, 10000);   \r\n        return true;\r\n    }\r\n\r\n   \r\n\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthService from '../services/AuthService';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      collapsed: true,\r\n      title:'Movie Rental'\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n  logOut() {\r\n    AuthService.logout();\r\n    console.log('logout')\r\n    window.location.reload();\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">\r\n            <img alt=\"\" src=\"logo.png\"></img>\r\n            </NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/movies\">Movies</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/fetch-orders\">My Rentals</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/login\" onClick={this.logOut}>Logout</NavLink>\r\n                </NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const API_URL = process.env.REACT_APP_MOVIES_SERVICE_URL;\r\n\r\nclass MoviesService {\r\n  async getSuggestions() {\r\n    const response = await fetch(API_URL + \"suggestions\");\r\n    return await response.json();\r\n  }\r\n\r\n  async populateRentalHistory() {\r\n    const response = await fetch(API_URL + \"rentalHistory\");\r\n    return await response.json();\r\n  }\r\n\r\n  async getMovieList() {\r\n    const response = await fetch(API_URL + \"movies\");\r\n    return await response.json();\r\n  }\r\n}\r\n\r\nexport default new MoviesService();\r\n","/**\r\n * @author Anoop Simon\r\n * @create date 2021-07-05 11:33:57\r\n * @modify date 2021-07-05 11:33:57\r\n * @desc A re -usable loader component\r\n */\r\nimport React, { Component } from \"react\";\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\n\r\nexport default class Spinner extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        color:'#8C55AA',\r\n        size:600\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"loader\">\r\n                    <FadeLoader\r\n            color={this.state.color}\r\n            loading={this.props.loading}\r\n            size={this.state.size}\r\n          ></FadeLoader>\r\n        \r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle, Button,CardDeck\r\n} from 'reactstrap';\r\nimport MoviesService from \"../services/MoviesService\";\r\nimport Spinner from \"./Spinner\";\r\nexport class Home extends Component {\r\n  static displayName = Home.name;\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state =\r\n    {\r\n      movies : [],\r\n      loading:true\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({\r\n      movies: await MoviesService.getSuggestions(),\r\n      loading:false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(this.state.loading) return(<Spinner></Spinner>)\r\n    return (\r\n      <div>\r\n        <h1 className=\"title\">\r\n          MOVIES TO BUY OR RENT ON <br></br>\r\n          BLU-RAY, DVD & DIGITAL\r\n        </h1>\r\n        <CardDeck>\r\n        {this.state.movies.map(movie => \r\n        \r\n        <Card style={{width:'350px',height:'400px',marginTop:'3%'}}>\r\n        <CardImg top src={movie.image} alt=\"Card image cap\" />\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">{movie.name}</CardTitle>\r\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{movie.genre}</CardSubtitle>\r\n          <CardText>{movie.description}</CardText>\r\n          <Button className=\"styledButton\">Buy Or Rent</Button>\r\n        </CardBody>\r\n      </Card>\r\n        \r\n        ) }\r\n\r\n       \r\n     \r\n    </CardDeck>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"reactstrap\";\r\nimport StarRatings from \"react-star-ratings\";\r\nimport {  Card } from \"reactstrap\";\r\nimport Spinner from \"./Spinner\";\r\nimport MoviesService from \"../services/MoviesService\";\r\n\r\nexport class Orders extends Component {\r\n  static displayName = Orders.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      forecasts: [],\r\n      loading: true,\r\n      color: \"purple\",\r\n      title: \"Movie Rental History\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const rentalHistory = await MoviesService.populateRentalHistory();\r\n    this.setState({ forecasts: rentalHistory, loading: false });\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <Card style={{ borderRadius: \"10px\" }}>\r\n        <Table aria-labelledby=\"tabelLabel\">\r\n          <thead>\r\n            <tr>\r\n              <th>Movie</th>\r\n              <th>Genre</th>\r\n              <th>Release Date</th>\r\n              <th>Price</th>\r\n              <th>Rating</th>\r\n              <th>Order Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {forecasts.map((forecast) => (\r\n              <tr key={forecast.date}>\r\n                <td>{forecast.movie}</td>\r\n                <td>{forecast.genre}</td>\r\n                <td>{forecast.releaseDate}</td>\r\n                <td>{forecast.price}</td>\r\n                <td>\r\n                  <StarRatings\r\n                    rating={forecast.rating}\r\n                    numberOfStars={5}\r\n                    name=\"rating\"\r\n                    starRatedColor=\"yellow\"\r\n                    starDimension=\"18px\"\r\n                  />\r\n                </td>\r\n                <td>{forecast.date}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading ? (\r\n      <Spinner />\r\n    ) : (\r\n      Orders.renderForecastsTable(this.state.forecasts)\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <h1 className=\"title\">{this.state.title}</h1>\r\n        <p>Below is the list of movies you have rented in the past</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport FuzzySearch from \"react-fuzzy\";\r\n\r\nimport {\r\n  Card,\r\n  Button,\r\n  CardImg,\r\n  CardTitle,\r\n  CardText,\r\n  CardSubtitle,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport MoviesService from \"../services/MoviesService\";\r\n\r\n\r\nexport class Movies extends Component {\r\n  static displayName = Movies.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentCount: 0,\r\n      title: \"Search Movies\",\r\n      movies: [],\r\n      result: null,\r\n    };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n    this.render = this.render.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await MoviesService.getMovieList();\r\n    this.setState({ movies: data, loading: false });\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1,\r\n    });\r\n  }\r\n\r\n  handleOnSearch = (selectedResult) => {\r\n    console.log(selectedResult);\r\n    this.setState({\r\n      result: selectedResult,\r\n    });\r\n  };\r\n\r\n  result() {\r\n    return (\r\n      <Card className=\"result sr\">\r\n        <CardImg\r\n          top\r\n          width=\"0%\"\r\n          height=\"400px\"\r\n          src=\"img_titanic.jpg\"\r\n          alt=\"Card image cap\"\r\n        />\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">Titanic</CardTitle>\r\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n            126 wins & 83 nominations total\r\n          </CardSubtitle>\r\n          <CardText>\r\n            Titanic: Directed by James Cameron. With Leonardo DiCaprio, Kate\r\n            Winslet, Billy Zane, Kathy Bates. A seventeen-year-old aristocrat\r\n            falls in love with a kind{\" \"}\r\n          </CardText>\r\n          <Button className=\"styledButton\">Buy</Button>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 className=\"title\">{this.state.title}</h1>\r\n        <div className=\"fuzzy\">\r\n          <FuzzySearch\r\n            list={this.state.movies}\r\n            keys={[\"author\", \"title\"]}\r\n            width={430}\r\n            style={{ all: \"unset\" }}\r\n            onSelect={(newSelectedItem) => {\r\n              this.handleOnSearch(newSelectedItem);\r\n            }}\r\n            className=\"fuzzy\"\r\n          />\r\n        </div>\r\n\r\n        {this.state.result === null ? <p> </p> : this.result()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup,  Input} from \"reactstrap\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { withRouter } from \"react-router\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nimport AuthService from \"../services/AuthService\";\r\nimport {Card} from \"reactstrap\";\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    // this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    // this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true,\r\n    });\r\n    AuthService.loginAs();\r\n    this.props.history.push(\"/\");\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading)\r\n      return (\r\n        <Spinner loading={this.state.loading}/>\r\n             );\r\n\r\n    return (\r\n      <>\r\n        <Container>\r\n          <Row style={{ marginTop: \"20%\" }}>\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <Card className=\"loginForm\">\r\n              <img alt=\"logo\" src=\"logo.png\"></img>\r\n              <p className=\"sign\" align=\"center\">Sign in</p>\r\n                <Form onSubmit={this.handleLogin}>\r\n                 \r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"username\"\r\n                      placeholder=\"Username\"\r\n                      aria-label=\"username or email\"\r\n                      className=\"un\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"pwd\"\r\n                      placeholder=\"Password\"\r\n                      aria-label=\"password\"\r\n                      className=\"un\"\r\n                    />\r\n                  </FormGroup>\r\n                  <Button\r\n                    id=\"loginBtn\"\r\n                    aria-label=\"Login Button\"\r\n                    className=\"styledButton\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form>\r\n                <p className=\"forgot\" align=\"center\"><a aria-label=\"forgot password\" href=\"/\">Forgot Password?</a></p>\r\n\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Login);\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\nimport {  Orders } from './components/Orders';\r\nimport {  Movies } from './components/Movies';\r\nimport  Login  from './components/Login';\r\nimport './custom.css'\r\nimport AuthService from './services/AuthService';\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n       currentUser: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,        \r\n      });\r\n    }\r\n  }\r\n\r\n  render () {\r\n    if(this.state.currentUser===undefined) return (<><Login></Login></>) ;\r\n\r\n    return (\r\n\r\n      <Layout>\r\n         <Switch>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/movies' component={Movies} />\r\n        <Route path='/fetch-orders' component={Orders} />\r\n        <Route path='/login' component={Login} />\r\n        </Switch>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}